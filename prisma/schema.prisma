


generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id              String               @id @default(uuid())
  email           String               @unique
  username        String?              @unique 
  dateModified    DateTime?            @default(now())
  location        String?              @unique
  createdAt       DateTime?            @default(now())
  projects        Project[]            @relation("UserProjects")
  requests        ProjectRequest[]     @relation("UserRequests")
  collaborations  ProjectCollaborator[] @relation("UserCollaborations")

  @@map("users") 
}

model Project {
  id          String               @id @default(uuid())
  title       String
  description String?
  banner      String?
  tags        String[]             @default([])
  roles       String[]             @default([])
  createdAt   DateTime             @default(now())
  created_by  String               
  createdBy   User                 @relation("UserProjects", fields: [created_by], references: [id])
  requests    ProjectRequest[]     @relation("ProjectRequests")
  collaborators ProjectCollaborator[] @relation("ProjectCollaborators")
}

model ProjectRequest {
  id          String     @id @default(uuid())
  status      String     @default("pending") 
  requestedAt DateTime   @default(now())
  userId      String
  user        User       @relation("UserRequests", fields: [userId], references: [id])
  projectId   String
  project     Project    @relation("ProjectRequests", fields: [projectId], references: [id])

  @@unique([userId, projectId]) 
}


model ProjectCollaborator {
  id         String     @id @default(uuid())
  joinedAt   DateTime   @default(now())
  userId     String
  user       User       @relation("UserCollaborations", fields: [userId], references: [id])
  projectId  String
  project    Project    @relation("ProjectCollaborators", fields: [projectId], references: [id])
}
